//
//	Copyright (C) 2021  Kendall Tauser
//
//	This program is free software; you can redistribute it and/or modify
//	it under the terms of the GNU General Public License as published by
//	the Free Software Foundation; either version 2 of the License, or
//	(at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License along
//	with this program; if not, write to the Free Software Foundation, Inc.,
//	51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: node_control.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReturnStatusCodes int32

const (
	// Default, action was successful and returned correct objects.
	ReturnStatusCodes_OK ReturnStatusCodes = 0
	// Request was accepted, but no response data yet/ever.
	ReturnStatusCodes_ACCEPTED ReturnStatusCodes = 1
	// Not allowed to create this element/perform operation.
	ReturnStatusCodes_PERMISSION_DENIED ReturnStatusCodes = 2
	// Element you are trying to interface with does not exist.
	ReturnStatusCodes_NON_EXISTENT_ELEMENT ReturnStatusCodes = 3
	// Internal error with the server serving this request.
	ReturnStatusCodes_INTERNAL_ERROR ReturnStatusCodes = 4
	// Error in the request message syntax/format.
	ReturnStatusCodes_SYNTAX_ERROR ReturnStatusCodes = 5
	// No change in an update object, it was the same as original object.
	ReturnStatusCodes_NO_CHANGE_ERROR ReturnStatusCodes = 6
	// Returns if there is no object to return based on the given filter.
	ReturnStatusCodes_NO_FILTER_RESPONSE_ERROR ReturnStatusCodes = 7
	// Returns if there is an invalid field in the object
	ReturnStatusCodes_INVALID_FIELD_ERROR ReturnStatusCodes = 8
	// Returns if the element supplied is a duplicate of an already existing element.
	ReturnStatusCodes_DUPLICATE_ELEMENT_ERROR ReturnStatusCodes = 9
)

// Enum value maps for ReturnStatusCodes.
var (
	ReturnStatusCodes_name = map[int32]string{
		0: "OK",
		1: "ACCEPTED",
		2: "PERMISSION_DENIED",
		3: "NON_EXISTENT_ELEMENT",
		4: "INTERNAL_ERROR",
		5: "SYNTAX_ERROR",
		6: "NO_CHANGE_ERROR",
		7: "NO_FILTER_RESPONSE_ERROR",
		8: "INVALID_FIELD_ERROR",
		9: "DUPLICATE_ELEMENT_ERROR",
	}
	ReturnStatusCodes_value = map[string]int32{
		"OK":                       0,
		"ACCEPTED":                 1,
		"PERMISSION_DENIED":        2,
		"NON_EXISTENT_ELEMENT":     3,
		"INTERNAL_ERROR":           4,
		"SYNTAX_ERROR":             5,
		"NO_CHANGE_ERROR":          6,
		"NO_FILTER_RESPONSE_ERROR": 7,
		"INVALID_FIELD_ERROR":      8,
		"DUPLICATE_ELEMENT_ERROR":  9,
	}
)

func (x ReturnStatusCodes) Enum() *ReturnStatusCodes {
	p := new(ReturnStatusCodes)
	*p = x
	return p
}

func (x ReturnStatusCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnStatusCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[0].Descriptor()
}

func (ReturnStatusCodes) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[0]
}

func (x ReturnStatusCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReturnStatusCodes.Descriptor instead.
func (ReturnStatusCodes) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{0}
}

type LinkTypes int32

const (
	// This type is specified for those links that are defined by hardware device drivers,
	// not by users.
	LinkTypes_HARDWARE     LinkTypes = 0 // Other link types that are available (a lot)
	LinkTypes_VLAN         LinkTypes = 1
	LinkTypes_VETH         LinkTypes = 2
	LinkTypes_VCAN         LinkTypes = 3
	LinkTypes_VXCAN        LinkTypes = 4
	LinkTypes_DUMMY        LinkTypes = 5
	LinkTypes_IFB          LinkTypes = 6
	LinkTypes_MACVLAN      LinkTypes = 7
	LinkTypes_MACVTAP      LinkTypes = 8
	LinkTypes_BRIDGE       LinkTypes = 9
	LinkTypes_BOND         LinkTypes = 10
	LinkTypes_TEAM         LinkTypes = 11
	LinkTypes_IPOIB        LinkTypes = 12
	LinkTypes_IP6TNL       LinkTypes = 13
	LinkTypes_IPIP         LinkTypes = 14
	LinkTypes_SIT          LinkTypes = 15
	LinkTypes_VXLAN        LinkTypes = 16
	LinkTypes_GRE          LinkTypes = 17
	LinkTypes_GRETAP       LinkTypes = 18
	LinkTypes_ERSPAN       LinkTypes = 19
	LinkTypes_IP6GRE       LinkTypes = 20
	LinkTypes_IP6GRETAP    LinkTypes = 21
	LinkTypes_IP6ERSPAN    LinkTypes = 22
	LinkTypes_VTI          LinkTypes = 23
	LinkTypes_NLMON        LinkTypes = 24
	LinkTypes_TEAM_SLAVE   LinkTypes = 25
	LinkTypes_BOND_SLAVE   LinkTypes = 26
	LinkTypes_BRIDGE_SLAVE LinkTypes = 27
	LinkTypes_IPVLAN       LinkTypes = 28
	LinkTypes_IPVTAP       LinkTypes = 29
	LinkTypes_GENEVE       LinkTypes = 30
	LinkTypes_VRF          LinkTypes = 31
	LinkTypes_MACSEC       LinkTypes = 32
	LinkTypes_NETDEVSIM    LinkTypes = 33
	LinkTypes_RMNET        LinkTypes = 34
)

// Enum value maps for LinkTypes.
var (
	LinkTypes_name = map[int32]string{
		0:  "HARDWARE",
		1:  "VLAN",
		2:  "VETH",
		3:  "VCAN",
		4:  "VXCAN",
		5:  "DUMMY",
		6:  "IFB",
		7:  "MACVLAN",
		8:  "MACVTAP",
		9:  "BRIDGE",
		10: "BOND",
		11: "TEAM",
		12: "IPOIB",
		13: "IP6TNL",
		14: "IPIP",
		15: "SIT",
		16: "VXLAN",
		17: "GRE",
		18: "GRETAP",
		19: "ERSPAN",
		20: "IP6GRE",
		21: "IP6GRETAP",
		22: "IP6ERSPAN",
		23: "VTI",
		24: "NLMON",
		25: "TEAM_SLAVE",
		26: "BOND_SLAVE",
		27: "BRIDGE_SLAVE",
		28: "IPVLAN",
		29: "IPVTAP",
		30: "GENEVE",
		31: "VRF",
		32: "MACSEC",
		33: "NETDEVSIM",
		34: "RMNET",
	}
	LinkTypes_value = map[string]int32{
		"HARDWARE":     0,
		"VLAN":         1,
		"VETH":         2,
		"VCAN":         3,
		"VXCAN":        4,
		"DUMMY":        5,
		"IFB":          6,
		"MACVLAN":      7,
		"MACVTAP":      8,
		"BRIDGE":       9,
		"BOND":         10,
		"TEAM":         11,
		"IPOIB":        12,
		"IP6TNL":       13,
		"IPIP":         14,
		"SIT":          15,
		"VXLAN":        16,
		"GRE":          17,
		"GRETAP":       18,
		"ERSPAN":       19,
		"IP6GRE":       20,
		"IP6GRETAP":    21,
		"IP6ERSPAN":    22,
		"VTI":          23,
		"NLMON":        24,
		"TEAM_SLAVE":   25,
		"BOND_SLAVE":   26,
		"BRIDGE_SLAVE": 27,
		"IPVLAN":       28,
		"IPVTAP":       29,
		"GENEVE":       30,
		"VRF":          31,
		"MACSEC":       32,
		"NETDEVSIM":    33,
		"RMNET":        34,
	}
)

func (x LinkTypes) Enum() *LinkTypes {
	p := new(LinkTypes)
	*p = x
	return p
}

func (x LinkTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[1].Descriptor()
}

func (LinkTypes) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[1]
}

func (x LinkTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkTypes.Descriptor instead.
func (LinkTypes) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{1}
}

type LinkElements int32

const (
	LinkElements_LINK_NAME       LinkElements = 0
	LinkElements_LINK_ADDRESS    LinkElements = 1
	LinkElements_LINK_MACADDRESS LinkElements = 2
	LinkElements_LINK_TYPE       LinkElements = 3
	LinkElements_LINK_MTU        LinkElements = 4
	LinkElements_LINK_INDEX      LinkElements = 5
	LinkElements_LINK_UP         LinkElements = 6
	LinkElements_LINK_ARPENABLED LinkElements = 7
	LinkElements_LINK_DYNAMIC    LinkElements = 8
	LinkElements_LINK_MULTICAST  LinkElements = 9
)

// Enum value maps for LinkElements.
var (
	LinkElements_name = map[int32]string{
		0: "LINK_NAME",
		1: "LINK_ADDRESS",
		2: "LINK_MACADDRESS",
		3: "LINK_TYPE",
		4: "LINK_MTU",
		5: "LINK_INDEX",
		6: "LINK_UP",
		7: "LINK_ARPENABLED",
		8: "LINK_DYNAMIC",
		9: "LINK_MULTICAST",
	}
	LinkElements_value = map[string]int32{
		"LINK_NAME":       0,
		"LINK_ADDRESS":    1,
		"LINK_MACADDRESS": 2,
		"LINK_TYPE":       3,
		"LINK_MTU":        4,
		"LINK_INDEX":      5,
		"LINK_UP":         6,
		"LINK_ARPENABLED": 7,
		"LINK_DYNAMIC":    8,
		"LINK_MULTICAST":  9,
	}
)

func (x LinkElements) Enum() *LinkElements {
	p := new(LinkElements)
	*p = x
	return p
}

func (x LinkElements) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkElements) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[2].Descriptor()
}

func (LinkElements) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[2]
}

func (x LinkElements) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkElements.Descriptor instead.
func (LinkElements) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{2}
}

// Used for GET operations, and allows specification
// of the elements that the user wants to filter by.
type RouteElements int32

const (
	RouteElements_ROUTE_DESTINATION_ADDRESS RouteElements = 0
	RouteElements_ROUTE_GATEWAY_CIDR        RouteElements = 1
	RouteElements_ROUTE_METRIC              RouteElements = 2
	RouteElements_ROUTE_INTERFACE           RouteElements = 3
)

// Enum value maps for RouteElements.
var (
	RouteElements_name = map[int32]string{
		0: "ROUTE_DESTINATION_ADDRESS",
		1: "ROUTE_GATEWAY_CIDR",
		2: "ROUTE_METRIC",
		3: "ROUTE_INTERFACE",
	}
	RouteElements_value = map[string]int32{
		"ROUTE_DESTINATION_ADDRESS": 0,
		"ROUTE_GATEWAY_CIDR":        1,
		"ROUTE_METRIC":              2,
		"ROUTE_INTERFACE":           3,
	}
)

func (x RouteElements) Enum() *RouteElements {
	p := new(RouteElements)
	*p = x
	return p
}

func (x RouteElements) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteElements) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[3].Descriptor()
}

func (RouteElements) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[3]
}

func (x RouteElements) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteElements.Descriptor instead.
func (RouteElements) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{3}
}

type IPType int32

const (
	IPType_IPV4 IPType = 0
	IPType_IPV6 IPType = 1
)

// Enum value maps for IPType.
var (
	IPType_name = map[int32]string{
		0: "IPV4",
		1: "IPV6",
	}
	IPType_value = map[string]int32{
		"IPV4": 0,
		"IPV6": 1,
	}
)

func (x IPType) Enum() *IPType {
	p := new(IPType)
	*p = x
	return p
}

func (x IPType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPType) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[4].Descriptor()
}

func (IPType) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[4]
}

func (x IPType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPType.Descriptor instead.
func (IPType) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{4}
}

type LinkAddressAssignment int32

const (
	LinkAddressAssignment_STATIC LinkAddressAssignment = 0
	LinkAddressAssignment_DHCP   LinkAddressAssignment = 1
	LinkAddressAssignment_L2TP   LinkAddressAssignment = 2
)

// Enum value maps for LinkAddressAssignment.
var (
	LinkAddressAssignment_name = map[int32]string{
		0: "STATIC",
		1: "DHCP",
		2: "L2TP",
	}
	LinkAddressAssignment_value = map[string]int32{
		"STATIC": 0,
		"DHCP":   1,
		"L2TP":   2,
	}
)

func (x LinkAddressAssignment) Enum() *LinkAddressAssignment {
	p := new(LinkAddressAssignment)
	*p = x
	return p
}

func (x LinkAddressAssignment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkAddressAssignment) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[5].Descriptor()
}

func (LinkAddressAssignment) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[5]
}

func (x LinkAddressAssignment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkAddressAssignment.Descriptor instead.
func (LinkAddressAssignment) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{5}
}

type LinkMACAddressAssignment int32

const (
	// Use the defined hardware mac address that may come with whatever link
	// you are attaching this address object to.
	LinkMACAddressAssignment_HW LinkMACAddressAssignment = 0
	// Use a randomly generated mac address for this link.
	LinkMACAddressAssignment_RANDOM LinkMACAddressAssignment = 1
	// Link stays static, but was randomly generated.
	LinkMACAddressAssignment_STATIC_RANDOM LinkMACAddressAssignment = 2
	// User defines the address of this link's hardware address.
	LinkMACAddressAssignment_PREDEFINED LinkMACAddressAssignment = 3
)

// Enum value maps for LinkMACAddressAssignment.
var (
	LinkMACAddressAssignment_name = map[int32]string{
		0: "HW",
		1: "RANDOM",
		2: "STATIC_RANDOM",
		3: "PREDEFINED",
	}
	LinkMACAddressAssignment_value = map[string]int32{
		"HW":            0,
		"RANDOM":        1,
		"STATIC_RANDOM": 2,
		"PREDEFINED":    3,
	}
)

func (x LinkMACAddressAssignment) Enum() *LinkMACAddressAssignment {
	p := new(LinkMACAddressAssignment)
	*p = x
	return p
}

func (x LinkMACAddressAssignment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkMACAddressAssignment) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[6].Descriptor()
}

func (LinkMACAddressAssignment) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[6]
}

func (x LinkMACAddressAssignment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkMACAddressAssignment.Descriptor instead.
func (LinkMACAddressAssignment) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{6}
}

type NeighborElements int32

const (
	NeighborElements_NEIGHBOR_ADDRESS    NeighborElements = 0
	NeighborElements_NEIGHBOR_MACADDRESS NeighborElements = 1
	NeighborElements_STATE               NeighborElements = 2
)

// Enum value maps for NeighborElements.
var (
	NeighborElements_name = map[int32]string{
		0: "NEIGHBOR_ADDRESS",
		1: "NEIGHBOR_MACADDRESS",
		2: "STATE",
	}
	NeighborElements_value = map[string]int32{
		"NEIGHBOR_ADDRESS":    0,
		"NEIGHBOR_MACADDRESS": 1,
		"STATE":               2,
	}
)

func (x NeighborElements) Enum() *NeighborElements {
	p := new(NeighborElements)
	*p = x
	return p
}

func (x NeighborElements) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NeighborElements) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[7].Descriptor()
}

func (NeighborElements) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[7]
}

func (x NeighborElements) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NeighborElements.Descriptor instead.
func (NeighborElements) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{7}
}

type NeighborState int32

const (
	NeighborState_PERMANENT  NeighborState = 0
	NeighborState_NOARP      NeighborState = 1
	NeighborState_STALE      NeighborState = 2
	NeighborState_REACHABLE  NeighborState = 3
	NeighborState_NONE       NeighborState = 5
	NeighborState_INCOMPLETE NeighborState = 6
	NeighborState_DELAY      NeighborState = 7
	NeighborState_PROBE      NeighborState = 8
	NeighborState_FAILED     NeighborState = 9
)

// Enum value maps for NeighborState.
var (
	NeighborState_name = map[int32]string{
		0: "PERMANENT",
		1: "NOARP",
		2: "STALE",
		3: "REACHABLE",
		5: "NONE",
		6: "INCOMPLETE",
		7: "DELAY",
		8: "PROBE",
		9: "FAILED",
	}
	NeighborState_value = map[string]int32{
		"PERMANENT":  0,
		"NOARP":      1,
		"STALE":      2,
		"REACHABLE":  3,
		"NONE":       5,
		"INCOMPLETE": 6,
		"DELAY":      7,
		"PROBE":      8,
		"FAILED":     9,
	}
)

func (x NeighborState) Enum() *NeighborState {
	p := new(NeighborState)
	*p = x
	return p
}

func (x NeighborState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NeighborState) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[8].Descriptor()
}

func (NeighborState) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[8]
}

func (x NeighborState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NeighborState.Descriptor instead.
func (NeighborState) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{8}
}

type AddressFamily int32

const (
	AddressFamily_ADDR_IP     AddressFamily = 0
	AddressFamily_ADDR_IP6    AddressFamily = 1
	AddressFamily_ADDR_INET   AddressFamily = 2
	AddressFamily_ADDR_ARP    AddressFamily = 3
	AddressFamily_ADDR_BRIDGE AddressFamily = 4
	AddressFamily_ADDR_NETDEV AddressFamily = 5
)

// Enum value maps for AddressFamily.
var (
	AddressFamily_name = map[int32]string{
		0: "ADDR_IP",
		1: "ADDR_IP6",
		2: "ADDR_INET",
		3: "ADDR_ARP",
		4: "ADDR_BRIDGE",
		5: "ADDR_NETDEV",
	}
	AddressFamily_value = map[string]int32{
		"ADDR_IP":     0,
		"ADDR_IP6":    1,
		"ADDR_INET":   2,
		"ADDR_ARP":    3,
		"ADDR_BRIDGE": 4,
		"ADDR_NETDEV": 5,
	}
)

func (x AddressFamily) Enum() *AddressFamily {
	p := new(AddressFamily)
	*p = x
	return p
}

func (x AddressFamily) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressFamily) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[9].Descriptor()
}

func (AddressFamily) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[9]
}

func (x AddressFamily) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressFamily.Descriptor instead.
func (AddressFamily) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{9}
}

type TableElements int32

const (
	TableElements_TABLE_FAMILY TableElements = 0
	TableElements_TABLE_NAME   TableElements = 1
)

// Enum value maps for TableElements.
var (
	TableElements_name = map[int32]string{
		0: "TABLE_FAMILY",
		1: "TABLE_NAME",
	}
	TableElements_value = map[string]int32{
		"TABLE_FAMILY": 0,
		"TABLE_NAME":   1,
	}
)

func (x TableElements) Enum() *TableElements {
	p := new(TableElements)
	*p = x
	return p
}

func (x TableElements) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableElements) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[10].Descriptor()
}

func (TableElements) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[10]
}

func (x TableElements) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableElements.Descriptor instead.
func (TableElements) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{10}
}

type ChainTypes int32

const (
	ChainTypes_FILTER ChainTypes = 0
	ChainTypes_NAT    ChainTypes = 1
	ChainTypes_ROUTE  ChainTypes = 2
)

// Enum value maps for ChainTypes.
var (
	ChainTypes_name = map[int32]string{
		0: "FILTER",
		1: "NAT",
		2: "ROUTE",
	}
	ChainTypes_value = map[string]int32{
		"FILTER": 0,
		"NAT":    1,
		"ROUTE":  2,
	}
)

func (x ChainTypes) Enum() *ChainTypes {
	p := new(ChainTypes)
	*p = x
	return p
}

func (x ChainTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChainTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[11].Descriptor()
}

func (ChainTypes) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[11]
}

func (x ChainTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChainTypes.Descriptor instead.
func (ChainTypes) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{11}
}

type ChainElements int32

const (
	ChainElements_CHAIN_TYPE ChainElements = 0
	ChainElements_CHAIN_NAME ChainElements = 1
)

// Enum value maps for ChainElements.
var (
	ChainElements_name = map[int32]string{
		0: "CHAIN_TYPE",
		1: "CHAIN_NAME",
	}
	ChainElements_value = map[string]int32{
		"CHAIN_TYPE": 0,
		"CHAIN_NAME": 1,
	}
)

func (x ChainElements) Enum() *ChainElements {
	p := new(ChainElements)
	*p = x
	return p
}

func (x ChainElements) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChainElements) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[12].Descriptor()
}

func (ChainElements) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[12]
}

func (x ChainElements) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChainElements.Descriptor instead.
func (ChainElements) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{12}
}

type RuleElements int32

const (
	RuleElements_RULE_DEFAULT_ACTION RuleElements = 0
	RuleElements_RULE_NAME           RuleElements = 1
)

// Enum value maps for RuleElements.
var (
	RuleElements_name = map[int32]string{
		0: "RULE_DEFAULT_ACTION",
		1: "RULE_NAME",
	}
	RuleElements_value = map[string]int32{
		"RULE_DEFAULT_ACTION": 0,
		"RULE_NAME":           1,
	}
)

func (x RuleElements) Enum() *RuleElements {
	p := new(RuleElements)
	*p = x
	return p
}

func (x RuleElements) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleElements) Descriptor() protoreflect.EnumDescriptor {
	return file_node_control_proto_enumTypes[13].Descriptor()
}

func (RuleElements) Type() protoreflect.EnumType {
	return &file_node_control_proto_enumTypes[13]
}

func (x RuleElements) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleElements.Descriptor instead.
func (RuleElements) EnumDescriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{13}
}

type CreateLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describes a link that should be created with this request.
	Link *Link `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *CreateLinkRequest) Reset() {
	*x = CreateLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLinkRequest) ProtoMessage() {}

func (x *CreateLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLinkRequest.ProtoReflect.Descriptor instead.
func (*CreateLinkRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLinkRequest) GetLink() *Link {
	if x != nil {
		return x.Link
	}
	return nil
}

type CreateLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the response status for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with creating this link.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateLinkResponse) Reset() {
	*x = CreateLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLinkResponse) ProtoMessage() {}

func (x *CreateLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLinkResponse.ProtoReflect.Descriptor instead.
func (*CreateLinkResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLinkResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *CreateLinkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the link
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Link *Link  `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *UpdateLinkRequest) Reset() {
	*x = UpdateLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLinkRequest) ProtoMessage() {}

func (x *UpdateLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLinkRequest.ProtoReflect.Descriptor instead.
func (*UpdateLinkRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateLinkRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLinkRequest) GetLink() *Link {
	if x != nil {
		return x.Link
	}
	return nil
}

type UpdateLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the response status for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating this link schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateLinkResponse) Reset() {
	*x = UpdateLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLinkResponse) ProtoMessage() {}

func (x *UpdateLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLinkResponse.ProtoReflect.Descriptor instead.
func (*UpdateLinkResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateLinkResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *UpdateLinkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Delete a link by name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteLinkRequest) Reset() {
	*x = DeleteLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLinkRequest) ProtoMessage() {}

func (x *DeleteLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLinkRequest.ProtoReflect.Descriptor instead.
func (*DeleteLinkRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteLinkRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the response status for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error string if there was any deleting kernel links.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Returns the deleted links that were removed
	// from the kernel with this request.
	DeletedLink *Link `protobuf:"bytes,3,opt,name=deleted_link,json=deletedLink,proto3" json:"deleted_link,omitempty"`
}

func (x *DeleteLinkResponse) Reset() {
	*x = DeleteLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLinkResponse) ProtoMessage() {}

func (x *DeleteLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLinkResponse.ProtoReflect.Descriptor instead.
func (*DeleteLinkResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteLinkResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *DeleteLinkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeleteLinkResponse) GetDeletedLink() *Link {
	if x != nil {
		return x.DeletedLink
	}
	return nil
}

type GetLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify the elements that you want to sort by.
	FilterElems map[string]string `protobuf:"bytes,1,rep,name=filter_elems,json=filterElems,proto3" json:"filter_elems,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Specify the maximum number of links/interfaces that you want back.
	MaxLinks int32 `protobuf:"varint,2,opt,name=max_links,json=maxLinks,proto3" json:"max_links,omitempty"`
}

func (x *GetLinkRequest) Reset() {
	*x = GetLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkRequest) ProtoMessage() {}

func (x *GetLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkRequest.ProtoReflect.Descriptor instead.
func (*GetLinkRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{6}
}

func (x *GetLinkRequest) GetFilterElems() map[string]string {
	if x != nil {
		return x.FilterElems
	}
	return nil
}

func (x *GetLinkRequest) GetMaxLinks() int32 {
	if x != nil {
		return x.MaxLinks
	}
	return 0
}

type GetLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the response status for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error string if there was any getting kernel links.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Returns the link objects that are on the host.
	Links []*Link `protobuf:"bytes,3,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *GetLinkResponse) Reset() {
	*x = GetLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkResponse) ProtoMessage() {}

func (x *GetLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkResponse.ProtoReflect.Descriptor instead.
func (*GetLinkResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{7}
}

func (x *GetLinkResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetLinkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLinkResponse) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type GetAllLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllLinksRequest) Reset() {
	*x = GetAllLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllLinksRequest) ProtoMessage() {}

func (x *GetAllLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllLinksRequest.ProtoReflect.Descriptor instead.
func (*GetAllLinksRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{8}
}

type GetAllLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the response status for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error string if there was any getting kernel interfaces.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Returns the interface objects that are on the host.
	Links []*Link `protobuf:"bytes,3,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *GetAllLinksResponse) Reset() {
	*x = GetAllLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllLinksResponse) ProtoMessage() {}

func (x *GetAllLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllLinksResponse.ProtoReflect.Descriptor instead.
func (*GetAllLinksResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllLinksResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetAllLinksResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetAllLinksResponse) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describes the interface address for this link.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Addressing for this link
	Address []*LinkAddress `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
	// MAC hardware addressing for this link
	Mac *LinkMACAddress `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	// The type of this link.
	Type LinkTypes `protobuf:"varint,4,opt,name=type,proto3,enum=v1alpha1.LinkTypes" json:"type,omitempty"`
	// MTU of link.
	Mtu uint32 `protobuf:"varint,5,opt,name=mtu,proto3" json:"mtu,omitempty"`
	// Specify the index of the link
	Index      uint32          `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
	Attributes *LinkAttributes `protobuf:"bytes,7,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{10}
}

func (x *Link) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Link) GetAddress() []*LinkAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Link) GetMac() *LinkMACAddress {
	if x != nil {
		return x.Mac
	}
	return nil
}

func (x *Link) GetType() LinkTypes {
	if x != nil {
		return x.Type
	}
	return LinkTypes_HARDWARE
}

func (x *Link) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Link) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Link) GetAttributes() *LinkAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Attributes for a link.
//
// Mostly ripped from netdevice(7) at
// https://www.man7.org/linux/man-pages/man7/netdevice.7.html
type LinkAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is the link up.
	Up bool `protobuf:"varint,1,opt,name=up,proto3" json:"up,omitempty"`
	// Is arp handling enabled on the link. True means ARP is disabled, false means enabled.
	NoArp bool `protobuf:"varint,2,opt,name=no_arp,json=noArp,proto3" json:"no_arp,omitempty"`
	// Is the link dynamic, in which case addresses are lost upon downing of the link.
	Dynamic bool `protobuf:"varint,3,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	// Is the link supporting multicast transmission.
	Multicast bool `protobuf:"varint,4,opt,name=multicast,proto3" json:"multicast,omitempty"`
	// Does the link have a valid broadcast address.
	Broadcast bool `protobuf:"varint,5,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	// Is the interface loopback.
	Loopback bool `protobuf:"varint,6,opt,name=loopback,proto3" json:"loopback,omitempty"`
	// Is the interface a point-to-point link.
	P2P bool `protobuf:"varint,7,opt,name=p2p,proto3" json:"p2p,omitempty"`
	// Is the link in promiscuous mode.
	Promiscuous bool `protobuf:"varint,8,opt,name=promiscuous,proto3" json:"promiscuous,omitempty"`
}

func (x *LinkAttributes) Reset() {
	*x = LinkAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkAttributes) ProtoMessage() {}

func (x *LinkAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkAttributes.ProtoReflect.Descriptor instead.
func (*LinkAttributes) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{11}
}

func (x *LinkAttributes) GetUp() bool {
	if x != nil {
		return x.Up
	}
	return false
}

func (x *LinkAttributes) GetNoArp() bool {
	if x != nil {
		return x.NoArp
	}
	return false
}

func (x *LinkAttributes) GetDynamic() bool {
	if x != nil {
		return x.Dynamic
	}
	return false
}

func (x *LinkAttributes) GetMulticast() bool {
	if x != nil {
		return x.Multicast
	}
	return false
}

func (x *LinkAttributes) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

func (x *LinkAttributes) GetLoopback() bool {
	if x != nil {
		return x.Loopback
	}
	return false
}

func (x *LinkAttributes) GetP2P() bool {
	if x != nil {
		return x.P2P
	}
	return false
}

func (x *LinkAttributes) GetPromiscuous() bool {
	if x != nil {
		return x.Promiscuous
	}
	return false
}

type GetRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify the elements that you want to sort by.
	FilterElems map[string]string `protobuf:"bytes,1,rep,name=filter_elems,json=filterElems,proto3" json:"filter_elems,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Specify the maximum number of routes that you want back.
	MaxRoutes int32 `protobuf:"varint,2,opt,name=max_routes,json=maxRoutes,proto3" json:"max_routes,omitempty"`
}

func (x *GetRouteRequest) Reset() {
	*x = GetRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteRequest) ProtoMessage() {}

func (x *GetRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteRequest.ProtoReflect.Descriptor instead.
func (*GetRouteRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{12}
}

func (x *GetRouteRequest) GetFilterElems() map[string]string {
	if x != nil {
		return x.FilterElems
	}
	return nil
}

func (x *GetRouteRequest) GetMaxRoutes() int32 {
	if x != nil {
		return x.MaxRoutes
	}
	return 0
}

type GetRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the response status for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error string if there was any getting kernel routes.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Returns the route objects that are on the host.
	Route *Route `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *GetRouteResponse) Reset() {
	*x = GetRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteResponse) ProtoMessage() {}

func (x *GetRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteResponse.ProtoReflect.Descriptor instead.
func (*GetRouteResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{13}
}

func (x *GetRouteResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetRouteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetRouteResponse) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type GetAllRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRoutesRequest) Reset() {
	*x = GetAllRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRoutesRequest) ProtoMessage() {}

func (x *GetAllRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRoutesRequest.ProtoReflect.Descriptor instead.
func (*GetAllRoutesRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{14}
}

type GetAllRoutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the response status for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error string if there was any getting kernel routes.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Returns the route objects that are on the host.
	Routes *Route `protobuf:"bytes,3,opt,name=routes,proto3" json:"routes,omitempty"`
}

func (x *GetAllRoutesResponse) Reset() {
	*x = GetAllRoutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRoutesResponse) ProtoMessage() {}

func (x *GetAllRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRoutesResponse.ProtoReflect.Descriptor instead.
func (*GetAllRoutesResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{15}
}

func (x *GetAllRoutesResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetAllRoutesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetAllRoutesResponse) GetRoutes() *Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type CreateStaticRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Can create one routes with a single request.
	Route *Route `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *CreateStaticRouteRequest) Reset() {
	*x = CreateStaticRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaticRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaticRouteRequest) ProtoMessage() {}

func (x *CreateStaticRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaticRouteRequest.ProtoReflect.Descriptor instead.
func (*CreateStaticRouteRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{16}
}

func (x *CreateStaticRouteRequest) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type CreateStaticRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the response status for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error string if there was adding the routes.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Returns the routes that failed to be created.
	FailedRoutes []*Route `protobuf:"bytes,3,rep,name=failed_routes,json=failedRoutes,proto3" json:"failed_routes,omitempty"`
}

func (x *CreateStaticRouteResponse) Reset() {
	*x = CreateStaticRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaticRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaticRouteResponse) ProtoMessage() {}

func (x *CreateStaticRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaticRouteResponse.ProtoReflect.Descriptor instead.
func (*CreateStaticRouteResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{17}
}

func (x *CreateStaticRouteResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *CreateStaticRouteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateStaticRouteResponse) GetFailedRoutes() []*Route {
	if x != nil {
		return x.FailedRoutes
	}
	return nil
}

type DeleteStaticRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Remove a route from the kernel.
	Route *Route `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *DeleteStaticRouteRequest) Reset() {
	*x = DeleteStaticRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStaticRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStaticRouteRequest) ProtoMessage() {}

func (x *DeleteStaticRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStaticRouteRequest.ProtoReflect.Descriptor instead.
func (*DeleteStaticRouteRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteStaticRouteRequest) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type DeleteStaticRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating this route schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Returns the route struct that was removed from the kernel.
	Route *Route `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *DeleteStaticRouteResponse) Reset() {
	*x = DeleteStaticRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStaticRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStaticRouteResponse) ProtoMessage() {}

func (x *DeleteStaticRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStaticRouteResponse.ProtoReflect.Descriptor instead.
func (*DeleteStaticRouteResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteStaticRouteResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *DeleteStaticRouteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeleteStaticRouteResponse) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type UpdateStaticRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string name = 1;
	// Specify the new object that will be compared and override the old.
	Route *Route `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *UpdateStaticRouteRequest) Reset() {
	*x = UpdateStaticRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaticRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaticRouteRequest) ProtoMessage() {}

func (x *UpdateStaticRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaticRouteRequest.ProtoReflect.Descriptor instead.
func (*UpdateStaticRouteRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateStaticRouteRequest) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type UpdateStaticRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating this route schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateStaticRouteResponse) Reset() {
	*x = UpdateStaticRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaticRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaticRouteResponse) ProtoMessage() {}

func (x *UpdateStaticRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaticRouteResponse.ProtoReflect.Descriptor instead.
func (*UpdateStaticRouteResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateStaticRouteResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *UpdateStaticRouteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Describes a route object to be managed with this service.
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describes the destination range for the route.
	Destination *IPCIDR `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	// Gateway IP address for this route.
	Gateway *IPAddress `protobuf:"bytes,2,opt,name=gateway,proto3" json:"gateway,omitempty"`
	// Cost metric for this route.
	Metric uint32 `protobuf:"varint,4,opt,name=metric,proto3" json:"metric,omitempty"`
	// Name of outbound interface for routes.
	Interface string `protobuf:"bytes,5,opt,name=interface,proto3" json:"interface,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{22}
}

func (x *Route) GetDestination() *IPCIDR {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Route) GetGateway() *IPAddress {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *Route) GetMetric() uint32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *Route) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

type IPCIDR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *IPAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Mask    *IPMask    `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *IPCIDR) Reset() {
	*x = IPCIDR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCIDR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCIDR) ProtoMessage() {}

func (x *IPCIDR) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCIDR.ProtoReflect.Descriptor instead.
func (*IPCIDR) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{23}
}

func (x *IPCIDR) GetAddress() *IPAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *IPCIDR) GetMask() *IPMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type IPMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify the type of this mask.
	Type IPType `protobuf:"varint,1,opt,name=type,proto3,enum=v1alpha1.IPType" json:"type,omitempty"`
	// Specification of the number of 1s in the subnet mask for this address.
	//
	// An example is a /24 network or 255.255.255.0 subnet mask would be valued as 24.
	// Same with 255.0.0.0 or /8 network would be 8.
	//
	// The same thing applies for IPv6 addresses.
	Mask uint32 `protobuf:"varint,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *IPMask) Reset() {
	*x = IPMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPMask) ProtoMessage() {}

func (x *IPMask) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPMask.ProtoReflect.Descriptor instead.
func (*IPMask) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{24}
}

func (x *IPMask) GetType() IPType {
	if x != nil {
		return x.Type
	}
	return IPType_IPV4
}

func (x *IPMask) GetMask() uint32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

type IPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify the type of this address.
	Type IPType `protobuf:"varint,1,opt,name=type,proto3,enum=v1alpha1.IPType" json:"type,omitempty"`
	// The array of bytes that make up the ip address.
	Address []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPAddress) Reset() {
	*x = IPAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddress) ProtoMessage() {}

func (x *IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddress.ProtoReflect.Descriptor instead.
func (*IPAddress) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{25}
}

func (x *IPAddress) GetType() IPType {
	if x != nil {
		return x.Type
	}
	return IPType_IPV4
}

func (x *IPAddress) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type MACAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The bytes that make up the hardware address. Should be 6 bytes.
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MACAddress) Reset() {
	*x = MACAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MACAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MACAddress) ProtoMessage() {}

func (x *MACAddress) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MACAddress.ProtoReflect.Descriptor instead.
func (*MACAddress) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{26}
}

func (x *MACAddress) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type LinkAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How is this address assigned.
	Assignment LinkAddressAssignment `protobuf:"varint,2,opt,name=assignment,proto3,enum=v1alpha1.LinkAddressAssignment" json:"assignment,omitempty"`
	// The actual address of this object. Should be formatted
	// so that the "net" package can parse the string into an address.
	Address *IPCIDR `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Gateway address of this address. Should be formatted
	// so that the "net" package can parse the string into an address.
	Gateway *IPAddress `protobuf:"bytes,6,opt,name=gateway,proto3" json:"gateway,omitempty"`
	// DNS server address of this link. Should be formatted
	// so that the "net" package can parse the string into an address.
	DnsServer *IPAddress `protobuf:"bytes,7,opt,name=dns_server,json=dnsServer,proto3" json:"dns_server,omitempty"`
}

func (x *LinkAddress) Reset() {
	*x = LinkAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkAddress) ProtoMessage() {}

func (x *LinkAddress) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkAddress.ProtoReflect.Descriptor instead.
func (*LinkAddress) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{27}
}

func (x *LinkAddress) GetAssignment() LinkAddressAssignment {
	if x != nil {
		return x.Assignment
	}
	return LinkAddressAssignment_STATIC
}

func (x *LinkAddress) GetAddress() *IPCIDR {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *LinkAddress) GetGateway() *IPAddress {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *LinkAddress) GetDnsServer() *IPAddress {
	if x != nil {
		return x.DnsServer
	}
	return nil
}

type LinkMACAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Assignment type for the MAC address with this.
	Assignment LinkMACAddressAssignment `protobuf:"varint,1,opt,name=assignment,proto3,enum=v1alpha1.LinkMACAddressAssignment" json:"assignment,omitempty"`
	// Should be a string formatted as xx:xx:xx:xx:xx:xx, so that
	// "net" can parse it correctly, otherwise will throw an error.
	Address *MACAddress `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Broadcast mac address.
	BroadcastAddress *MACAddress `protobuf:"bytes,3,opt,name=broadcast_address,json=broadcastAddress,proto3" json:"broadcast_address,omitempty"`
}

func (x *LinkMACAddress) Reset() {
	*x = LinkMACAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkMACAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkMACAddress) ProtoMessage() {}

func (x *LinkMACAddress) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkMACAddress.ProtoReflect.Descriptor instead.
func (*LinkMACAddress) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{28}
}

func (x *LinkMACAddress) GetAssignment() LinkMACAddressAssignment {
	if x != nil {
		return x.Assignment
	}
	return LinkMACAddressAssignment_HW
}

func (x *LinkMACAddress) GetAddress() *MACAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *LinkMACAddress) GetBroadcastAddress() *MACAddress {
	if x != nil {
		return x.BroadcastAddress
	}
	return nil
}

type Neighbor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of this neighbor (ip)
	IpAddress *IPAddress `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Link-layer address of this neighbor.
	MacAddress *MACAddress `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// The state of this neighbor.
	State NeighborState `protobuf:"varint,4,opt,name=state,proto3,enum=v1alpha1.NeighborState" json:"state,omitempty"`
}

func (x *Neighbor) Reset() {
	*x = Neighbor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Neighbor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Neighbor) ProtoMessage() {}

func (x *Neighbor) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Neighbor.ProtoReflect.Descriptor instead.
func (*Neighbor) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{29}
}

func (x *Neighbor) GetIpAddress() *IPAddress {
	if x != nil {
		return x.IpAddress
	}
	return nil
}

func (x *Neighbor) GetMacAddress() *MACAddress {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

func (x *Neighbor) GetState() NeighborState {
	if x != nil {
		return x.State
	}
	return NeighborState_PERMANENT
}

type GetNeighborRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify the elements that you want to sort by.
	FilterElems map[string]string `protobuf:"bytes,1,rep,name=filter_elems,json=filterElems,proto3" json:"filter_elems,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Specify the maximum number of neighbors that you want back.
	MaxNeighbors int32 `protobuf:"varint,2,opt,name=max_neighbors,json=maxNeighbors,proto3" json:"max_neighbors,omitempty"`
}

func (x *GetNeighborRequest) Reset() {
	*x = GetNeighborRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNeighborRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNeighborRequest) ProtoMessage() {}

func (x *GetNeighborRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNeighborRequest.ProtoReflect.Descriptor instead.
func (*GetNeighborRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{30}
}

func (x *GetNeighborRequest) GetFilterElems() map[string]string {
	if x != nil {
		return x.FilterElems
	}
	return nil
}

func (x *GetNeighborRequest) GetMaxNeighbors() int32 {
	if x != nil {
		return x.MaxNeighbors
	}
	return 0
}

type GetNeighborResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating getting neighbor.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The neighbor that is returned.
	Neighbor *Neighbor `protobuf:"bytes,3,opt,name=neighbor,proto3" json:"neighbor,omitempty"`
}

func (x *GetNeighborResponse) Reset() {
	*x = GetNeighborResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNeighborResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNeighborResponse) ProtoMessage() {}

func (x *GetNeighborResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNeighborResponse.ProtoReflect.Descriptor instead.
func (*GetNeighborResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{31}
}

func (x *GetNeighborResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetNeighborResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetNeighborResponse) GetNeighbor() *Neighbor {
	if x != nil {
		return x.Neighbor
	}
	return nil
}

type GetAllNeighborsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllNeighborsRequest) Reset() {
	*x = GetAllNeighborsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllNeighborsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNeighborsRequest) ProtoMessage() {}

func (x *GetAllNeighborsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNeighborsRequest.ProtoReflect.Descriptor instead.
func (*GetAllNeighborsRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{32}
}

type GetAllNeighborsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating this neighbor schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The neighbors that are returned.
	Neighbors []*Neighbor `protobuf:"bytes,3,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
}

func (x *GetAllNeighborsResponse) Reset() {
	*x = GetAllNeighborsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllNeighborsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNeighborsResponse) ProtoMessage() {}

func (x *GetAllNeighborsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNeighborsResponse.ProtoReflect.Descriptor instead.
func (*GetAllNeighborsResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{33}
}

func (x *GetAllNeighborsResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetAllNeighborsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetAllNeighborsResponse) GetNeighbors() []*Neighbor {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

type CreateNeighborRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describe the negibor to be added to the ARP cache with this request.
	Neighbor *Neighbor `protobuf:"bytes,1,opt,name=neighbor,proto3" json:"neighbor,omitempty"`
}

func (x *CreateNeighborRequest) Reset() {
	*x = CreateNeighborRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNeighborRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNeighborRequest) ProtoMessage() {}

func (x *CreateNeighborRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNeighborRequest.ProtoReflect.Descriptor instead.
func (*CreateNeighborRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{34}
}

func (x *CreateNeighborRequest) GetNeighbor() *Neighbor {
	if x != nil {
		return x.Neighbor
	}
	return nil
}

type CreateNeighborResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating this neighbor schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateNeighborResponse) Reset() {
	*x = CreateNeighborResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNeighborResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNeighborResponse) ProtoMessage() {}

func (x *CreateNeighborResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNeighborResponse.ProtoReflect.Descriptor instead.
func (*CreateNeighborResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{35}
}

func (x *CreateNeighborResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *CreateNeighborResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteNeighborRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNeighborRequest) Reset() {
	*x = DeleteNeighborRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNeighborRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNeighborRequest) ProtoMessage() {}

func (x *DeleteNeighborRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNeighborRequest.ProtoReflect.Descriptor instead.
func (*DeleteNeighborRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{36}
}

type DeleteNeighborResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating this neighbor schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The returned deleted neighbor object.
	Neighbor *Neighbor `protobuf:"bytes,3,opt,name=neighbor,proto3" json:"neighbor,omitempty"`
}

func (x *DeleteNeighborResponse) Reset() {
	*x = DeleteNeighborResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNeighborResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNeighborResponse) ProtoMessage() {}

func (x *DeleteNeighborResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNeighborResponse.ProtoReflect.Descriptor instead.
func (*DeleteNeighborResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteNeighborResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *DeleteNeighborResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeleteNeighborResponse) GetNeighbor() *Neighbor {
	if x != nil {
		return x.Neighbor
	}
	return nil
}

type UpdateNeighborRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNeighborRequest) Reset() {
	*x = UpdateNeighborRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNeighborRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNeighborRequest) ProtoMessage() {}

func (x *UpdateNeighborRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNeighborRequest.ProtoReflect.Descriptor instead.
func (*UpdateNeighborRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{38}
}

type UpdateNeighborResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNeighborResponse) Reset() {
	*x = UpdateNeighborResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNeighborResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNeighborResponse) ProtoMessage() {}

func (x *UpdateNeighborResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNeighborResponse.ProtoReflect.Descriptor instead.
func (*UpdateNeighborResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{39}
}

type GetAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAddressRequest) Reset() {
	*x = GetAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressRequest) ProtoMessage() {}

func (x *GetAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressRequest.ProtoReflect.Descriptor instead.
func (*GetAddressRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{40}
}

type GetAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAddressResponse) Reset() {
	*x = GetAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressResponse) ProtoMessage() {}

func (x *GetAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressResponse.ProtoReflect.Descriptor instead.
func (*GetAddressResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{41}
}

type GetAllAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllAddressesRequest) Reset() {
	*x = GetAllAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAddressesRequest) ProtoMessage() {}

func (x *GetAllAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetAllAddressesRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{42}
}

type GetAllAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllAddressesResponse) Reset() {
	*x = GetAllAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAddressesResponse) ProtoMessage() {}

func (x *GetAllAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetAllAddressesResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{43}
}

type DeleteAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAddressRequest) Reset() {
	*x = DeleteAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAddressRequest) ProtoMessage() {}

func (x *DeleteAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAddressRequest.ProtoReflect.Descriptor instead.
func (*DeleteAddressRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{44}
}

type DeleteAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAddressResponse) Reset() {
	*x = DeleteAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAddressResponse) ProtoMessage() {}

func (x *DeleteAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAddressResponse.ProtoReflect.Descriptor instead.
func (*DeleteAddressResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{45}
}

type UpdateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAddressRequest) Reset() {
	*x = UpdateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressRequest) ProtoMessage() {}

func (x *UpdateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateAddressRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{46}
}

type UpdateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAddressResponse) Reset() {
	*x = UpdateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressResponse) ProtoMessage() {}

func (x *UpdateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressResponse.ProtoReflect.Descriptor instead.
func (*UpdateAddressResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{47}
}

type CreateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAddressRequest) Reset() {
	*x = CreateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressRequest) ProtoMessage() {}

func (x *CreateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressRequest.ProtoReflect.Descriptor instead.
func (*CreateAddressRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{48}
}

type CreateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAddressResponse) Reset() {
	*x = CreateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressResponse) ProtoMessage() {}

func (x *CreateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressResponse.ProtoReflect.Descriptor instead.
func (*CreateAddressResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{49}
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Family AddressFamily `protobuf:"varint,1,opt,name=family,proto3,enum=v1alpha1.AddressFamily" json:"family,omitempty"`
	Name   string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{50}
}

func (x *Table) GetFamily() AddressFamily {
	if x != nil {
		return x.Family
	}
	return AddressFamily_ADDR_IP
}

func (x *Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Chain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ChainTypes `protobuf:"varint,1,opt,name=type,proto3,enum=v1alpha1.ChainTypes" json:"type,omitempty"`
	Name string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Chain) Reset() {
	*x = Chain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{51}
}

func (x *Chain) GetType() ChainTypes {
	if x != nil {
		return x.Type
	}
	return ChainTypes_FILTER
}

func (x *Chain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{52}
}

type GetTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTableRequest) Reset() {
	*x = GetTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableRequest) ProtoMessage() {}

func (x *GetTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableRequest.ProtoReflect.Descriptor instead.
func (*GetTableRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{53}
}

type GetTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with getting this table schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The return table from this operation.
	Table *Table `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *GetTableResponse) Reset() {
	*x = GetTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableResponse) ProtoMessage() {}

func (x *GetTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableResponse.ProtoReflect.Descriptor instead.
func (*GetTableResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{54}
}

func (x *GetTableResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetTableResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetTableResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

type GetAllTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllTablesRequest) Reset() {
	*x = GetAllTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTablesRequest) ProtoMessage() {}

func (x *GetAllTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTablesRequest.ProtoReflect.Descriptor instead.
func (*GetAllTablesRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{55}
}

type GetAllTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with getting this table schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The return tables from this operation.
	Table []*Table `protobuf:"bytes,3,rep,name=table,proto3" json:"table,omitempty"`
}

func (x *GetAllTablesResponse) Reset() {
	*x = GetAllTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTablesResponse) ProtoMessage() {}

func (x *GetAllTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTablesResponse.ProtoReflect.Descriptor instead.
func (*GetAllTablesResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{56}
}

func (x *GetAllTablesResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetAllTablesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetAllTablesResponse) GetTable() []*Table {
	if x != nil {
		return x.Table
	}
	return nil
}

type DeleteTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTableRequest) Reset() {
	*x = DeleteTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableRequest) ProtoMessage() {}

func (x *DeleteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteTableRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{57}
}

type DeleteTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating this table schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The returned deleted table object.
	Table *Table `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *DeleteTableResponse) Reset() {
	*x = DeleteTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableResponse) ProtoMessage() {}

func (x *DeleteTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableResponse.ProtoReflect.Descriptor instead.
func (*DeleteTableResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteTableResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *DeleteTableResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeleteTableResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

type CreateTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{59}
}

type CreateTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResponse.ProtoReflect.Descriptor instead.
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{60}
}

type UpdateTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTableRequest) Reset() {
	*x = UpdateTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableRequest) ProtoMessage() {}

func (x *UpdateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateTableRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{61}
}

type UpdateTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTableResponse) Reset() {
	*x = UpdateTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableResponse) ProtoMessage() {}

func (x *UpdateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableResponse.ProtoReflect.Descriptor instead.
func (*UpdateTableResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{62}
}

type GetChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetChainRequest) Reset() {
	*x = GetChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainRequest) ProtoMessage() {}

func (x *GetChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainRequest.ProtoReflect.Descriptor instead.
func (*GetChainRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{63}
}

type GetChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with getting this chain schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The return chain from this operation.
	Chain *Chain `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (x *GetChainResponse) Reset() {
	*x = GetChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainResponse) ProtoMessage() {}

func (x *GetChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainResponse.ProtoReflect.Descriptor instead.
func (*GetChainResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{64}
}

func (x *GetChainResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetChainResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetChainResponse) GetChain() *Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

type GetAllChainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllChainsRequest) Reset() {
	*x = GetAllChainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllChainsRequest) ProtoMessage() {}

func (x *GetAllChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllChainsRequest.ProtoReflect.Descriptor instead.
func (*GetAllChainsRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{65}
}

type GetAllChainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with getting this chain schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The return chains from this operation.
	Chain []*Chain `protobuf:"bytes,3,rep,name=chain,proto3" json:"chain,omitempty"`
}

func (x *GetAllChainsResponse) Reset() {
	*x = GetAllChainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllChainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllChainsResponse) ProtoMessage() {}

func (x *GetAllChainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllChainsResponse.ProtoReflect.Descriptor instead.
func (*GetAllChainsResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{66}
}

func (x *GetAllChainsResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetAllChainsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetAllChainsResponse) GetChain() []*Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

type DeleteChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteChainRequest) Reset() {
	*x = DeleteChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChainRequest) ProtoMessage() {}

func (x *DeleteChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChainRequest.ProtoReflect.Descriptor instead.
func (*DeleteChainRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{67}
}

type DeleteChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with updating this chain schema.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The returned deleted chain object.
	Chain *Chain `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (x *DeleteChainResponse) Reset() {
	*x = DeleteChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChainResponse) ProtoMessage() {}

func (x *DeleteChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChainResponse.ProtoReflect.Descriptor instead.
func (*DeleteChainResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{68}
}

func (x *DeleteChainResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *DeleteChainResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeleteChainResponse) GetChain() *Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

type CreateChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateChainRequest) Reset() {
	*x = CreateChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChainRequest) ProtoMessage() {}

func (x *CreateChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChainRequest.ProtoReflect.Descriptor instead.
func (*CreateChainRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{69}
}

type CreateChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateChainResponse) Reset() {
	*x = CreateChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChainResponse) ProtoMessage() {}

func (x *CreateChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChainResponse.ProtoReflect.Descriptor instead.
func (*CreateChainResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{70}
}

type UpdateChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateChainRequest) Reset() {
	*x = UpdateChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChainRequest) ProtoMessage() {}

func (x *UpdateChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChainRequest.ProtoReflect.Descriptor instead.
func (*UpdateChainRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{71}
}

type UpdateChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateChainResponse) Reset() {
	*x = UpdateChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChainResponse) ProtoMessage() {}

func (x *UpdateChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChainResponse.ProtoReflect.Descriptor instead.
func (*UpdateChainResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{72}
}

type GetRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRuleRequest) Reset() {
	*x = GetRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleRequest) ProtoMessage() {}

func (x *GetRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleRequest.ProtoReflect.Descriptor instead.
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{73}
}

type GetRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRuleResponse) Reset() {
	*x = GetRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleResponse) ProtoMessage() {}

func (x *GetRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleResponse.ProtoReflect.Descriptor instead.
func (*GetRuleResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{74}
}

type GetAllRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRulesRequest) Reset() {
	*x = GetAllRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRulesRequest) ProtoMessage() {}

func (x *GetAllRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRulesRequest.ProtoReflect.Descriptor instead.
func (*GetAllRulesRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{75}
}

type GetAllRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRulesResponse) Reset() {
	*x = GetAllRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRulesResponse) ProtoMessage() {}

func (x *GetAllRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRulesResponse.ProtoReflect.Descriptor instead.
func (*GetAllRulesResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{76}
}

type DeleteRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRuleRequest) Reset() {
	*x = DeleteRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleRequest) ProtoMessage() {}

func (x *DeleteRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{77}
}

type DeleteRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRuleResponse) Reset() {
	*x = DeleteRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleResponse) ProtoMessage() {}

func (x *DeleteRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRuleResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{78}
}

type CreateRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRuleRequest) Reset() {
	*x = CreateRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleRequest) ProtoMessage() {}

func (x *CreateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{79}
}

type CreateRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRuleResponse) Reset() {
	*x = CreateRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleResponse) ProtoMessage() {}

func (x *CreateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateRuleResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{80}
}

type UpdateRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRuleRequest) Reset() {
	*x = UpdateRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleRequest) ProtoMessage() {}

func (x *UpdateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{81}
}

type UpdateRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRuleResponse) Reset() {
	*x = UpdateRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleResponse) ProtoMessage() {}

func (x *UpdateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRuleResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{82}
}

type GetSysctlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Present the string of the sysctl to be returned.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetSysctlRequest) Reset() {
	*x = GetSysctlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysctlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysctlRequest) ProtoMessage() {}

func (x *GetSysctlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysctlRequest.ProtoReflect.Descriptor instead.
func (*GetSysctlRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{83}
}

func (x *GetSysctlRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetSysctlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with retrieving this sysctl.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The return value of this sysctl.
	Value int64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetSysctlResponse) Reset() {
	*x = GetSysctlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysctlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysctlResponse) ProtoMessage() {}

func (x *GetSysctlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysctlResponse.ProtoReflect.Descriptor instead.
func (*GetSysctlResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{84}
}

func (x *GetSysctlResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *GetSysctlResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetSysctlResponse) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetSysctlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Present the string of the sysctl to be set.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the value to set this sysctl to.
	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetSysctlRequest) Reset() {
	*x = SetSysctlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSysctlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSysctlRequest) ProtoMessage() {}

func (x *SetSysctlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSysctlRequest.ProtoReflect.Descriptor instead.
func (*SetSysctlRequest) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{85}
}

func (x *SetSysctlRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetSysctlRequest) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetSysctlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response code for this RPC call.
	StatusCode ReturnStatusCodes `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=v1alpha1.ReturnStatusCodes" json:"status_code,omitempty"`
	// Error if there is any with retrieving this sysctl.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The set value of this sysctl.
	Value int64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetSysctlResponse) Reset() {
	*x = SetSysctlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_control_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSysctlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSysctlResponse) ProtoMessage() {}

func (x *SetSysctlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_control_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSysctlResponse.ProtoReflect.Descriptor instead.
func (*SetSysctlResponse) Descriptor() ([]byte, []int) {
	return file_node_control_proto_rawDescGZIP(), []int{86}
}

func (x *SetSysctlResponse) GetStatusCode() ReturnStatusCodes {
	if x != nil {
		return x.StatusCode
	}
	return ReturnStatusCodes_OK
}

func (x *SetSysctlResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SetSysctlResponse) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_node_control_proto protoreflect.FileDescriptor

var file_node_control_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x37,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x68, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x4b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x68,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x22,
	0xbb, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6c, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x1a, 0x3e, 0x0a,
	0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2a, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x41,
	0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x27, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x38,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x6e,
	0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x75, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6e,
	0x6f, 0x5f, 0x61, 0x72, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6e, 0x6f, 0x41,
	0x72, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x6f, 0x70,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x6f, 0x6f, 0x70,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x32, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x70, 0x32, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73,
	0x63, 0x75, 0x6f, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x63, 0x75, 0x6f, 0x75, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0c,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27,
	0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0d,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x22, 0x41, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x41,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x22, 0x6f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x43,
	0x49, 0x44, 0x52, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x06, 0x49, 0x50, 0x43, 0x49, 0x44, 0x52, 0x12,
	0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04,
	0x6d, 0x61, 0x73, 0x6b, 0x22, 0x42, 0x0a, 0x06, 0x49, 0x50, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x24,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x4b, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49,
	0x50, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x26, 0x0a, 0x0a, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xdd, 0x01,
	0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x43, 0x49, 0x44,
	0x52, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x6e, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0xc7, 0x01,
	0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x42, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x11, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x41, 0x43, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x08, 0x4e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xcb,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x45, 0x6c, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x1a, 0x3e, 0x0a, 0x10,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x99, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x08,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x30, 0x0a, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x73, 0x22, 0x47, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x08, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x52, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x22, 0x6c, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a, 0x05, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x06, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x06,
	0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x91, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x14,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3c, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x7d, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a,
	0xe9, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50,
	0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x4f, 0x5f, 0x46, 0x49,
	0x4c, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x12, 0x1b,
	0x0a, 0x17, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09, 0x2a, 0xa9, 0x03, 0x0a, 0x09,
	0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x41, 0x52,
	0x44, 0x57, 0x41, 0x52, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x4c, 0x41, 0x4e, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x45, 0x54, 0x48, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x56,
	0x43, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x58, 0x43, 0x41, 0x4e, 0x10, 0x04,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x55, 0x4d, 0x4d, 0x59, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x46, 0x42, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x43, 0x56, 0x4c, 0x41, 0x4e, 0x10,
	0x07, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x43, 0x56, 0x54, 0x41, 0x50, 0x10, 0x08, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x52, 0x49, 0x44, 0x47, 0x45, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f,
	0x4e, 0x44, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x0b, 0x12, 0x09,
	0x0a, 0x05, 0x49, 0x50, 0x4f, 0x49, 0x42, 0x10, 0x0c, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x50, 0x36,
	0x54, 0x4e, 0x4c, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x49, 0x50, 0x10, 0x0e, 0x12,
	0x07, 0x0a, 0x03, 0x53, 0x49, 0x54, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x58, 0x4c, 0x41,
	0x4e, 0x10, 0x10, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x52, 0x45, 0x10, 0x11, 0x12, 0x0a, 0x0a, 0x06,
	0x47, 0x52, 0x45, 0x54, 0x41, 0x50, 0x10, 0x12, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x52, 0x53, 0x50,
	0x41, 0x4e, 0x10, 0x13, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x50, 0x36, 0x47, 0x52, 0x45, 0x10, 0x14,
	0x12, 0x0d, 0x0a, 0x09, 0x49, 0x50, 0x36, 0x47, 0x52, 0x45, 0x54, 0x41, 0x50, 0x10, 0x15, 0x12,
	0x0d, 0x0a, 0x09, 0x49, 0x50, 0x36, 0x45, 0x52, 0x53, 0x50, 0x41, 0x4e, 0x10, 0x16, 0x12, 0x07,
	0x0a, 0x03, 0x56, 0x54, 0x49, 0x10, 0x17, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x4c, 0x4d, 0x4f, 0x4e,
	0x10, 0x18, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x53, 0x4c, 0x41, 0x56, 0x45,
	0x10, 0x19, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x4e, 0x44, 0x5f, 0x53, 0x4c, 0x41, 0x56, 0x45,
	0x10, 0x1a, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x52, 0x49, 0x44, 0x47, 0x45, 0x5f, 0x53, 0x4c, 0x41,
	0x56, 0x45, 0x10, 0x1b, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x50, 0x56, 0x4c, 0x41, 0x4e, 0x10, 0x1c,
	0x12, 0x0a, 0x0a, 0x06, 0x49, 0x50, 0x56, 0x54, 0x41, 0x50, 0x10, 0x1d, 0x12, 0x0a, 0x0a, 0x06,
	0x47, 0x45, 0x4e, 0x45, 0x56, 0x45, 0x10, 0x1e, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x52, 0x46, 0x10,
	0x1f, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x43, 0x53, 0x45, 0x43, 0x10, 0x20, 0x12, 0x0d, 0x0a,
	0x09, 0x4e, 0x45, 0x54, 0x44, 0x45, 0x56, 0x53, 0x49, 0x4d, 0x10, 0x21, 0x12, 0x09, 0x0a, 0x05,
	0x52, 0x4d, 0x4e, 0x45, 0x54, 0x10, 0x22, 0x2a, 0xb9, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x6b,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x49, 0x4e, 0x4b,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x49, 0x4e, 0x4b, 0x5f,
	0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x49, 0x4e,
	0x4b, 0x5f, 0x4d, 0x41, 0x43, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x4d, 0x54, 0x55, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4c,
	0x49, 0x4e, 0x4b, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4c,
	0x49, 0x4e, 0x4b, 0x5f, 0x55, 0x50, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x49, 0x4e, 0x4b,
	0x5f, 0x41, 0x52, 0x50, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x10, 0x0a,
	0x0c, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10, 0x08, 0x12,
	0x12, 0x0a, 0x0e, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53,
	0x54, 0x10, 0x09, 0x2a, 0x6d, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x44, 0x45,
	0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53,
	0x53, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x47, 0x41, 0x54,
	0x45, 0x57, 0x41, 0x59, 0x5f, 0x43, 0x49, 0x44, 0x52, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52,
	0x4f, 0x55, 0x54, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45,
	0x10, 0x03, 0x2a, 0x1c, 0x0a, 0x06, 0x49, 0x50, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x50, 0x56, 0x34, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x36, 0x10, 0x01,
	0x2a, 0x37, 0x0a, 0x15, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41,
	0x54, 0x49, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x48, 0x43, 0x50, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x4c, 0x32, 0x54, 0x50, 0x10, 0x02, 0x2a, 0x51, 0x0a, 0x18, 0x4c, 0x69, 0x6e,
	0x6b, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41,
	0x54, 0x49, 0x43, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x52, 0x45, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x4c, 0x0a, 0x10,
	0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x10, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42,
	0x4f, 0x52, 0x5f, 0x4d, 0x41, 0x43, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x2a, 0x7f, 0x0a, 0x0d, 0x4e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x45, 0x52, 0x4d, 0x41, 0x4e, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x4f,
	0x41, 0x52, 0x50, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x4c, 0x45, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x41, 0x43, 0x48, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x4c,
	0x41, 0x59, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x52, 0x4f, 0x42, 0x45, 0x10, 0x08, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x2a, 0x69, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x0b, 0x0a, 0x07,
	0x41, 0x44, 0x44, 0x52, 0x5f, 0x49, 0x50, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x44, 0x44,
	0x52, 0x5f, 0x49, 0x50, 0x36, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x44, 0x44, 0x52, 0x5f,
	0x49, 0x4e, 0x45, 0x54, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x52, 0x5f, 0x41,
	0x52, 0x50, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x44, 0x44, 0x52, 0x5f, 0x42, 0x52, 0x49,
	0x44, 0x47, 0x45, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x44, 0x44, 0x52, 0x5f, 0x4e, 0x45,
	0x54, 0x44, 0x45, 0x56, 0x10, 0x05, 0x2a, 0x31, 0x0a, 0x0d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x5f, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x41, 0x42,
	0x4c, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x2a, 0x2c, 0x0a, 0x0a, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x4c, 0x54, 0x45,
	0x52, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x41, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x52, 0x4f, 0x55, 0x54, 0x45, 0x10, 0x02, 0x2a, 0x2f, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x41, 0x49,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x41, 0x49,
	0x4e, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x2a, 0x36, 0x0a, 0x0c, 0x52, 0x75, 0x6c, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x55, 0x4c, 0x45,
	0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01,
	0x32, 0x9b, 0x0e, 0x0a, 0x15, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1b,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x18, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x12, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x73, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x12, 0x1f, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x12, 0x1a, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x63, 0x74, 0x6c, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x63, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x8f,
	0x09, 0x0a, 0x1d, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_control_proto_rawDescOnce sync.Once
	file_node_control_proto_rawDescData = file_node_control_proto_rawDesc
)

func file_node_control_proto_rawDescGZIP() []byte {
	file_node_control_proto_rawDescOnce.Do(func() {
		file_node_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_control_proto_rawDescData)
	})
	return file_node_control_proto_rawDescData
}

var file_node_control_proto_enumTypes = make([]protoimpl.EnumInfo, 14)
var file_node_control_proto_msgTypes = make([]protoimpl.MessageInfo, 90)
var file_node_control_proto_goTypes = []interface{}{
	(ReturnStatusCodes)(0),            // 0: v1alpha1.ReturnStatusCodes
	(LinkTypes)(0),                    // 1: v1alpha1.LinkTypes
	(LinkElements)(0),                 // 2: v1alpha1.LinkElements
	(RouteElements)(0),                // 3: v1alpha1.RouteElements
	(IPType)(0),                       // 4: v1alpha1.IPType
	(LinkAddressAssignment)(0),        // 5: v1alpha1.LinkAddressAssignment
	(LinkMACAddressAssignment)(0),     // 6: v1alpha1.LinkMACAddressAssignment
	(NeighborElements)(0),             // 7: v1alpha1.NeighborElements
	(NeighborState)(0),                // 8: v1alpha1.NeighborState
	(AddressFamily)(0),                // 9: v1alpha1.AddressFamily
	(TableElements)(0),                // 10: v1alpha1.TableElements
	(ChainTypes)(0),                   // 11: v1alpha1.ChainTypes
	(ChainElements)(0),                // 12: v1alpha1.ChainElements
	(RuleElements)(0),                 // 13: v1alpha1.RuleElements
	(*CreateLinkRequest)(nil),         // 14: v1alpha1.CreateLinkRequest
	(*CreateLinkResponse)(nil),        // 15: v1alpha1.CreateLinkResponse
	(*UpdateLinkRequest)(nil),         // 16: v1alpha1.UpdateLinkRequest
	(*UpdateLinkResponse)(nil),        // 17: v1alpha1.UpdateLinkResponse
	(*DeleteLinkRequest)(nil),         // 18: v1alpha1.DeleteLinkRequest
	(*DeleteLinkResponse)(nil),        // 19: v1alpha1.DeleteLinkResponse
	(*GetLinkRequest)(nil),            // 20: v1alpha1.GetLinkRequest
	(*GetLinkResponse)(nil),           // 21: v1alpha1.GetLinkResponse
	(*GetAllLinksRequest)(nil),        // 22: v1alpha1.GetAllLinksRequest
	(*GetAllLinksResponse)(nil),       // 23: v1alpha1.GetAllLinksResponse
	(*Link)(nil),                      // 24: v1alpha1.Link
	(*LinkAttributes)(nil),            // 25: v1alpha1.LinkAttributes
	(*GetRouteRequest)(nil),           // 26: v1alpha1.GetRouteRequest
	(*GetRouteResponse)(nil),          // 27: v1alpha1.GetRouteResponse
	(*GetAllRoutesRequest)(nil),       // 28: v1alpha1.GetAllRoutesRequest
	(*GetAllRoutesResponse)(nil),      // 29: v1alpha1.GetAllRoutesResponse
	(*CreateStaticRouteRequest)(nil),  // 30: v1alpha1.CreateStaticRouteRequest
	(*CreateStaticRouteResponse)(nil), // 31: v1alpha1.CreateStaticRouteResponse
	(*DeleteStaticRouteRequest)(nil),  // 32: v1alpha1.DeleteStaticRouteRequest
	(*DeleteStaticRouteResponse)(nil), // 33: v1alpha1.DeleteStaticRouteResponse
	(*UpdateStaticRouteRequest)(nil),  // 34: v1alpha1.UpdateStaticRouteRequest
	(*UpdateStaticRouteResponse)(nil), // 35: v1alpha1.UpdateStaticRouteResponse
	(*Route)(nil),                     // 36: v1alpha1.Route
	(*IPCIDR)(nil),                    // 37: v1alpha1.IPCIDR
	(*IPMask)(nil),                    // 38: v1alpha1.IPMask
	(*IPAddress)(nil),                 // 39: v1alpha1.IPAddress
	(*MACAddress)(nil),                // 40: v1alpha1.MACAddress
	(*LinkAddress)(nil),               // 41: v1alpha1.LinkAddress
	(*LinkMACAddress)(nil),            // 42: v1alpha1.LinkMACAddress
	(*Neighbor)(nil),                  // 43: v1alpha1.Neighbor
	(*GetNeighborRequest)(nil),        // 44: v1alpha1.GetNeighborRequest
	(*GetNeighborResponse)(nil),       // 45: v1alpha1.GetNeighborResponse
	(*GetAllNeighborsRequest)(nil),    // 46: v1alpha1.GetAllNeighborsRequest
	(*GetAllNeighborsResponse)(nil),   // 47: v1alpha1.GetAllNeighborsResponse
	(*CreateNeighborRequest)(nil),     // 48: v1alpha1.CreateNeighborRequest
	(*CreateNeighborResponse)(nil),    // 49: v1alpha1.CreateNeighborResponse
	(*DeleteNeighborRequest)(nil),     // 50: v1alpha1.DeleteNeighborRequest
	(*DeleteNeighborResponse)(nil),    // 51: v1alpha1.DeleteNeighborResponse
	(*UpdateNeighborRequest)(nil),     // 52: v1alpha1.UpdateNeighborRequest
	(*UpdateNeighborResponse)(nil),    // 53: v1alpha1.UpdateNeighborResponse
	(*GetAddressRequest)(nil),         // 54: v1alpha1.GetAddressRequest
	(*GetAddressResponse)(nil),        // 55: v1alpha1.GetAddressResponse
	(*GetAllAddressesRequest)(nil),    // 56: v1alpha1.GetAllAddressesRequest
	(*GetAllAddressesResponse)(nil),   // 57: v1alpha1.GetAllAddressesResponse
	(*DeleteAddressRequest)(nil),      // 58: v1alpha1.DeleteAddressRequest
	(*DeleteAddressResponse)(nil),     // 59: v1alpha1.DeleteAddressResponse
	(*UpdateAddressRequest)(nil),      // 60: v1alpha1.UpdateAddressRequest
	(*UpdateAddressResponse)(nil),     // 61: v1alpha1.UpdateAddressResponse
	(*CreateAddressRequest)(nil),      // 62: v1alpha1.CreateAddressRequest
	(*CreateAddressResponse)(nil),     // 63: v1alpha1.CreateAddressResponse
	(*Table)(nil),                     // 64: v1alpha1.Table
	(*Chain)(nil),                     // 65: v1alpha1.Chain
	(*Rule)(nil),                      // 66: v1alpha1.Rule
	(*GetTableRequest)(nil),           // 67: v1alpha1.GetTableRequest
	(*GetTableResponse)(nil),          // 68: v1alpha1.GetTableResponse
	(*GetAllTablesRequest)(nil),       // 69: v1alpha1.GetAllTablesRequest
	(*GetAllTablesResponse)(nil),      // 70: v1alpha1.GetAllTablesResponse
	(*DeleteTableRequest)(nil),        // 71: v1alpha1.DeleteTableRequest
	(*DeleteTableResponse)(nil),       // 72: v1alpha1.DeleteTableResponse
	(*CreateTableRequest)(nil),        // 73: v1alpha1.CreateTableRequest
	(*CreateTableResponse)(nil),       // 74: v1alpha1.CreateTableResponse
	(*UpdateTableRequest)(nil),        // 75: v1alpha1.UpdateTableRequest
	(*UpdateTableResponse)(nil),       // 76: v1alpha1.UpdateTableResponse
	(*GetChainRequest)(nil),           // 77: v1alpha1.GetChainRequest
	(*GetChainResponse)(nil),          // 78: v1alpha1.GetChainResponse
	(*GetAllChainsRequest)(nil),       // 79: v1alpha1.GetAllChainsRequest
	(*GetAllChainsResponse)(nil),      // 80: v1alpha1.GetAllChainsResponse
	(*DeleteChainRequest)(nil),        // 81: v1alpha1.DeleteChainRequest
	(*DeleteChainResponse)(nil),       // 82: v1alpha1.DeleteChainResponse
	(*CreateChainRequest)(nil),        // 83: v1alpha1.CreateChainRequest
	(*CreateChainResponse)(nil),       // 84: v1alpha1.CreateChainResponse
	(*UpdateChainRequest)(nil),        // 85: v1alpha1.UpdateChainRequest
	(*UpdateChainResponse)(nil),       // 86: v1alpha1.UpdateChainResponse
	(*GetRuleRequest)(nil),            // 87: v1alpha1.GetRuleRequest
	(*GetRuleResponse)(nil),           // 88: v1alpha1.GetRuleResponse
	(*GetAllRulesRequest)(nil),        // 89: v1alpha1.GetAllRulesRequest
	(*GetAllRulesResponse)(nil),       // 90: v1alpha1.GetAllRulesResponse
	(*DeleteRuleRequest)(nil),         // 91: v1alpha1.DeleteRuleRequest
	(*DeleteRuleResponse)(nil),        // 92: v1alpha1.DeleteRuleResponse
	(*CreateRuleRequest)(nil),         // 93: v1alpha1.CreateRuleRequest
	(*CreateRuleResponse)(nil),        // 94: v1alpha1.CreateRuleResponse
	(*UpdateRuleRequest)(nil),         // 95: v1alpha1.UpdateRuleRequest
	(*UpdateRuleResponse)(nil),        // 96: v1alpha1.UpdateRuleResponse
	(*GetSysctlRequest)(nil),          // 97: v1alpha1.GetSysctlRequest
	(*GetSysctlResponse)(nil),         // 98: v1alpha1.GetSysctlResponse
	(*SetSysctlRequest)(nil),          // 99: v1alpha1.SetSysctlRequest
	(*SetSysctlResponse)(nil),         // 100: v1alpha1.SetSysctlResponse
	nil,                               // 101: v1alpha1.GetLinkRequest.FilterElemsEntry
	nil,                               // 102: v1alpha1.GetRouteRequest.FilterElemsEntry
	nil,                               // 103: v1alpha1.GetNeighborRequest.FilterElemsEntry
}
var file_node_control_proto_depIdxs = []int32{
	24,  // 0: v1alpha1.CreateLinkRequest.link:type_name -> v1alpha1.Link
	0,   // 1: v1alpha1.CreateLinkResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	24,  // 2: v1alpha1.UpdateLinkRequest.link:type_name -> v1alpha1.Link
	0,   // 3: v1alpha1.UpdateLinkResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	0,   // 4: v1alpha1.DeleteLinkResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	24,  // 5: v1alpha1.DeleteLinkResponse.deleted_link:type_name -> v1alpha1.Link
	101, // 6: v1alpha1.GetLinkRequest.filter_elems:type_name -> v1alpha1.GetLinkRequest.FilterElemsEntry
	0,   // 7: v1alpha1.GetLinkResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	24,  // 8: v1alpha1.GetLinkResponse.links:type_name -> v1alpha1.Link
	0,   // 9: v1alpha1.GetAllLinksResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	24,  // 10: v1alpha1.GetAllLinksResponse.links:type_name -> v1alpha1.Link
	41,  // 11: v1alpha1.Link.address:type_name -> v1alpha1.LinkAddress
	42,  // 12: v1alpha1.Link.mac:type_name -> v1alpha1.LinkMACAddress
	1,   // 13: v1alpha1.Link.type:type_name -> v1alpha1.LinkTypes
	25,  // 14: v1alpha1.Link.attributes:type_name -> v1alpha1.LinkAttributes
	102, // 15: v1alpha1.GetRouteRequest.filter_elems:type_name -> v1alpha1.GetRouteRequest.FilterElemsEntry
	0,   // 16: v1alpha1.GetRouteResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	36,  // 17: v1alpha1.GetRouteResponse.route:type_name -> v1alpha1.Route
	0,   // 18: v1alpha1.GetAllRoutesResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	36,  // 19: v1alpha1.GetAllRoutesResponse.routes:type_name -> v1alpha1.Route
	36,  // 20: v1alpha1.CreateStaticRouteRequest.route:type_name -> v1alpha1.Route
	0,   // 21: v1alpha1.CreateStaticRouteResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	36,  // 22: v1alpha1.CreateStaticRouteResponse.failed_routes:type_name -> v1alpha1.Route
	36,  // 23: v1alpha1.DeleteStaticRouteRequest.route:type_name -> v1alpha1.Route
	0,   // 24: v1alpha1.DeleteStaticRouteResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	36,  // 25: v1alpha1.DeleteStaticRouteResponse.route:type_name -> v1alpha1.Route
	36,  // 26: v1alpha1.UpdateStaticRouteRequest.route:type_name -> v1alpha1.Route
	0,   // 27: v1alpha1.UpdateStaticRouteResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	37,  // 28: v1alpha1.Route.destination:type_name -> v1alpha1.IPCIDR
	39,  // 29: v1alpha1.Route.gateway:type_name -> v1alpha1.IPAddress
	39,  // 30: v1alpha1.IPCIDR.address:type_name -> v1alpha1.IPAddress
	38,  // 31: v1alpha1.IPCIDR.mask:type_name -> v1alpha1.IPMask
	4,   // 32: v1alpha1.IPMask.type:type_name -> v1alpha1.IPType
	4,   // 33: v1alpha1.IPAddress.type:type_name -> v1alpha1.IPType
	5,   // 34: v1alpha1.LinkAddress.assignment:type_name -> v1alpha1.LinkAddressAssignment
	37,  // 35: v1alpha1.LinkAddress.address:type_name -> v1alpha1.IPCIDR
	39,  // 36: v1alpha1.LinkAddress.gateway:type_name -> v1alpha1.IPAddress
	39,  // 37: v1alpha1.LinkAddress.dns_server:type_name -> v1alpha1.IPAddress
	6,   // 38: v1alpha1.LinkMACAddress.assignment:type_name -> v1alpha1.LinkMACAddressAssignment
	40,  // 39: v1alpha1.LinkMACAddress.address:type_name -> v1alpha1.MACAddress
	40,  // 40: v1alpha1.LinkMACAddress.broadcast_address:type_name -> v1alpha1.MACAddress
	39,  // 41: v1alpha1.Neighbor.ip_address:type_name -> v1alpha1.IPAddress
	40,  // 42: v1alpha1.Neighbor.mac_address:type_name -> v1alpha1.MACAddress
	8,   // 43: v1alpha1.Neighbor.state:type_name -> v1alpha1.NeighborState
	103, // 44: v1alpha1.GetNeighborRequest.filter_elems:type_name -> v1alpha1.GetNeighborRequest.FilterElemsEntry
	0,   // 45: v1alpha1.GetNeighborResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	43,  // 46: v1alpha1.GetNeighborResponse.neighbor:type_name -> v1alpha1.Neighbor
	0,   // 47: v1alpha1.GetAllNeighborsResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	43,  // 48: v1alpha1.GetAllNeighborsResponse.neighbors:type_name -> v1alpha1.Neighbor
	43,  // 49: v1alpha1.CreateNeighborRequest.neighbor:type_name -> v1alpha1.Neighbor
	0,   // 50: v1alpha1.CreateNeighborResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	0,   // 51: v1alpha1.DeleteNeighborResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	43,  // 52: v1alpha1.DeleteNeighborResponse.neighbor:type_name -> v1alpha1.Neighbor
	9,   // 53: v1alpha1.Table.family:type_name -> v1alpha1.AddressFamily
	11,  // 54: v1alpha1.Chain.type:type_name -> v1alpha1.ChainTypes
	0,   // 55: v1alpha1.GetTableResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	64,  // 56: v1alpha1.GetTableResponse.table:type_name -> v1alpha1.Table
	0,   // 57: v1alpha1.GetAllTablesResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	64,  // 58: v1alpha1.GetAllTablesResponse.table:type_name -> v1alpha1.Table
	0,   // 59: v1alpha1.DeleteTableResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	64,  // 60: v1alpha1.DeleteTableResponse.table:type_name -> v1alpha1.Table
	0,   // 61: v1alpha1.GetChainResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	65,  // 62: v1alpha1.GetChainResponse.chain:type_name -> v1alpha1.Chain
	0,   // 63: v1alpha1.GetAllChainsResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	65,  // 64: v1alpha1.GetAllChainsResponse.chain:type_name -> v1alpha1.Chain
	0,   // 65: v1alpha1.DeleteChainResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	65,  // 66: v1alpha1.DeleteChainResponse.chain:type_name -> v1alpha1.Chain
	0,   // 67: v1alpha1.GetSysctlResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	0,   // 68: v1alpha1.SetSysctlResponse.status_code:type_name -> v1alpha1.ReturnStatusCodes
	14,  // 69: v1alpha1.NodeControllerService.CreateLink:input_type -> v1alpha1.CreateLinkRequest
	16,  // 70: v1alpha1.NodeControllerService.UpdateLink:input_type -> v1alpha1.UpdateLinkRequest
	18,  // 71: v1alpha1.NodeControllerService.DeleteLink:input_type -> v1alpha1.DeleteLinkRequest
	20,  // 72: v1alpha1.NodeControllerService.GetLink:input_type -> v1alpha1.GetLinkRequest
	22,  // 73: v1alpha1.NodeControllerService.GetAllLinks:input_type -> v1alpha1.GetAllLinksRequest
	30,  // 74: v1alpha1.NodeControllerService.CreateStaticRoute:input_type -> v1alpha1.CreateStaticRouteRequest
	32,  // 75: v1alpha1.NodeControllerService.DeleteStaticRoute:input_type -> v1alpha1.DeleteStaticRouteRequest
	34,  // 76: v1alpha1.NodeControllerService.UpdateStaticRoute:input_type -> v1alpha1.UpdateStaticRouteRequest
	26,  // 77: v1alpha1.NodeControllerService.GetRoute:input_type -> v1alpha1.GetRouteRequest
	28,  // 78: v1alpha1.NodeControllerService.GetAllRoutes:input_type -> v1alpha1.GetAllRoutesRequest
	44,  // 79: v1alpha1.NodeControllerService.GetNeighbor:input_type -> v1alpha1.GetNeighborRequest
	46,  // 80: v1alpha1.NodeControllerService.GetAllNeighbors:input_type -> v1alpha1.GetAllNeighborsRequest
	48,  // 81: v1alpha1.NodeControllerService.CreateNeighbor:input_type -> v1alpha1.CreateNeighborRequest
	50,  // 82: v1alpha1.NodeControllerService.DeleteNeighbor:input_type -> v1alpha1.DeleteNeighborRequest
	52,  // 83: v1alpha1.NodeControllerService.UpdateNeighbor:input_type -> v1alpha1.UpdateNeighborRequest
	54,  // 84: v1alpha1.NodeControllerService.GetAddress:input_type -> v1alpha1.GetAddressRequest
	56,  // 85: v1alpha1.NodeControllerService.GetAllAddresses:input_type -> v1alpha1.GetAllAddressesRequest
	62,  // 86: v1alpha1.NodeControllerService.CreateAddress:input_type -> v1alpha1.CreateAddressRequest
	58,  // 87: v1alpha1.NodeControllerService.DeleteAddress:input_type -> v1alpha1.DeleteAddressRequest
	60,  // 88: v1alpha1.NodeControllerService.UpdateAddress:input_type -> v1alpha1.UpdateAddressRequest
	97,  // 89: v1alpha1.NodeControllerService.GetSysctl:input_type -> v1alpha1.GetSysctlRequest
	99,  // 90: v1alpha1.NodeControllerService.SetSysctl:input_type -> v1alpha1.SetSysctlRequest
	67,  // 91: v1alpha1.NodeFirewallControllerService.GetTable:input_type -> v1alpha1.GetTableRequest
	69,  // 92: v1alpha1.NodeFirewallControllerService.GetAllTables:input_type -> v1alpha1.GetAllTablesRequest
	71,  // 93: v1alpha1.NodeFirewallControllerService.DeleteTable:input_type -> v1alpha1.DeleteTableRequest
	73,  // 94: v1alpha1.NodeFirewallControllerService.CreateTable:input_type -> v1alpha1.CreateTableRequest
	75,  // 95: v1alpha1.NodeFirewallControllerService.UpdateTable:input_type -> v1alpha1.UpdateTableRequest
	77,  // 96: v1alpha1.NodeFirewallControllerService.GetChain:input_type -> v1alpha1.GetChainRequest
	79,  // 97: v1alpha1.NodeFirewallControllerService.GetAllChains:input_type -> v1alpha1.GetAllChainsRequest
	81,  // 98: v1alpha1.NodeFirewallControllerService.DeleteChain:input_type -> v1alpha1.DeleteChainRequest
	83,  // 99: v1alpha1.NodeFirewallControllerService.CreateChain:input_type -> v1alpha1.CreateChainRequest
	85,  // 100: v1alpha1.NodeFirewallControllerService.UpdateChain:input_type -> v1alpha1.UpdateChainRequest
	87,  // 101: v1alpha1.NodeFirewallControllerService.GetRule:input_type -> v1alpha1.GetRuleRequest
	89,  // 102: v1alpha1.NodeFirewallControllerService.GetAllRules:input_type -> v1alpha1.GetAllRulesRequest
	91,  // 103: v1alpha1.NodeFirewallControllerService.DeleteRule:input_type -> v1alpha1.DeleteRuleRequest
	93,  // 104: v1alpha1.NodeFirewallControllerService.CreateRule:input_type -> v1alpha1.CreateRuleRequest
	95,  // 105: v1alpha1.NodeFirewallControllerService.UpdateRule:input_type -> v1alpha1.UpdateRuleRequest
	15,  // 106: v1alpha1.NodeControllerService.CreateLink:output_type -> v1alpha1.CreateLinkResponse
	17,  // 107: v1alpha1.NodeControllerService.UpdateLink:output_type -> v1alpha1.UpdateLinkResponse
	19,  // 108: v1alpha1.NodeControllerService.DeleteLink:output_type -> v1alpha1.DeleteLinkResponse
	21,  // 109: v1alpha1.NodeControllerService.GetLink:output_type -> v1alpha1.GetLinkResponse
	23,  // 110: v1alpha1.NodeControllerService.GetAllLinks:output_type -> v1alpha1.GetAllLinksResponse
	31,  // 111: v1alpha1.NodeControllerService.CreateStaticRoute:output_type -> v1alpha1.CreateStaticRouteResponse
	33,  // 112: v1alpha1.NodeControllerService.DeleteStaticRoute:output_type -> v1alpha1.DeleteStaticRouteResponse
	35,  // 113: v1alpha1.NodeControllerService.UpdateStaticRoute:output_type -> v1alpha1.UpdateStaticRouteResponse
	27,  // 114: v1alpha1.NodeControllerService.GetRoute:output_type -> v1alpha1.GetRouteResponse
	29,  // 115: v1alpha1.NodeControllerService.GetAllRoutes:output_type -> v1alpha1.GetAllRoutesResponse
	45,  // 116: v1alpha1.NodeControllerService.GetNeighbor:output_type -> v1alpha1.GetNeighborResponse
	47,  // 117: v1alpha1.NodeControllerService.GetAllNeighbors:output_type -> v1alpha1.GetAllNeighborsResponse
	49,  // 118: v1alpha1.NodeControllerService.CreateNeighbor:output_type -> v1alpha1.CreateNeighborResponse
	50,  // 119: v1alpha1.NodeControllerService.DeleteNeighbor:output_type -> v1alpha1.DeleteNeighborRequest
	53,  // 120: v1alpha1.NodeControllerService.UpdateNeighbor:output_type -> v1alpha1.UpdateNeighborResponse
	55,  // 121: v1alpha1.NodeControllerService.GetAddress:output_type -> v1alpha1.GetAddressResponse
	57,  // 122: v1alpha1.NodeControllerService.GetAllAddresses:output_type -> v1alpha1.GetAllAddressesResponse
	63,  // 123: v1alpha1.NodeControllerService.CreateAddress:output_type -> v1alpha1.CreateAddressResponse
	59,  // 124: v1alpha1.NodeControllerService.DeleteAddress:output_type -> v1alpha1.DeleteAddressResponse
	61,  // 125: v1alpha1.NodeControllerService.UpdateAddress:output_type -> v1alpha1.UpdateAddressResponse
	98,  // 126: v1alpha1.NodeControllerService.GetSysctl:output_type -> v1alpha1.GetSysctlResponse
	100, // 127: v1alpha1.NodeControllerService.SetSysctl:output_type -> v1alpha1.SetSysctlResponse
	68,  // 128: v1alpha1.NodeFirewallControllerService.GetTable:output_type -> v1alpha1.GetTableResponse
	70,  // 129: v1alpha1.NodeFirewallControllerService.GetAllTables:output_type -> v1alpha1.GetAllTablesResponse
	72,  // 130: v1alpha1.NodeFirewallControllerService.DeleteTable:output_type -> v1alpha1.DeleteTableResponse
	74,  // 131: v1alpha1.NodeFirewallControllerService.CreateTable:output_type -> v1alpha1.CreateTableResponse
	76,  // 132: v1alpha1.NodeFirewallControllerService.UpdateTable:output_type -> v1alpha1.UpdateTableResponse
	78,  // 133: v1alpha1.NodeFirewallControllerService.GetChain:output_type -> v1alpha1.GetChainResponse
	80,  // 134: v1alpha1.NodeFirewallControllerService.GetAllChains:output_type -> v1alpha1.GetAllChainsResponse
	82,  // 135: v1alpha1.NodeFirewallControllerService.DeleteChain:output_type -> v1alpha1.DeleteChainResponse
	84,  // 136: v1alpha1.NodeFirewallControllerService.CreateChain:output_type -> v1alpha1.CreateChainResponse
	85,  // 137: v1alpha1.NodeFirewallControllerService.UpdateChain:output_type -> v1alpha1.UpdateChainRequest
	88,  // 138: v1alpha1.NodeFirewallControllerService.GetRule:output_type -> v1alpha1.GetRuleResponse
	90,  // 139: v1alpha1.NodeFirewallControllerService.GetAllRules:output_type -> v1alpha1.GetAllRulesResponse
	92,  // 140: v1alpha1.NodeFirewallControllerService.DeleteRule:output_type -> v1alpha1.DeleteRuleResponse
	94,  // 141: v1alpha1.NodeFirewallControllerService.CreateRule:output_type -> v1alpha1.CreateRuleResponse
	96,  // 142: v1alpha1.NodeFirewallControllerService.UpdateRule:output_type -> v1alpha1.UpdateRuleResponse
	106, // [106:143] is the sub-list for method output_type
	69,  // [69:106] is the sub-list for method input_type
	69,  // [69:69] is the sub-list for extension type_name
	69,  // [69:69] is the sub-list for extension extendee
	0,   // [0:69] is the sub-list for field type_name
}

func init() { file_node_control_proto_init() }
func file_node_control_proto_init() {
	if File_node_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaticRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaticRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStaticRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStaticRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaticRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaticRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPCIDR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MACAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkMACAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Neighbor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNeighborRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNeighborResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllNeighborsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllNeighborsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNeighborRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNeighborResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNeighborRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNeighborResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNeighborRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNeighborResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllChainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllChainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysctlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysctlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSysctlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_control_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSysctlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_control_proto_rawDesc,
			NumEnums:      14,
			NumMessages:   90,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_node_control_proto_goTypes,
		DependencyIndexes: file_node_control_proto_depIdxs,
		EnumInfos:         file_node_control_proto_enumTypes,
		MessageInfos:      file_node_control_proto_msgTypes,
	}.Build()
	File_node_control_proto = out.File
	file_node_control_proto_rawDesc = nil
	file_node_control_proto_goTypes = nil
	file_node_control_proto_depIdxs = nil
}
