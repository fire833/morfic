/*
*	Copyright (C) 2022  Kendall Tauser
*
*	This program is free software; you can redistribute it and/or modify
*	it under the terms of the GNU General Public License as published by
*	the Free Software Foundation; either version 2 of the License, or
*	(at your option) any later version.
*
*	This program is distributed in the hope that it will be useful,
*	but WITHOUT ANY WARRANTY; without even the implied warranty of
*	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*	GNU General Public License for more details.
*
*	You should have received a copy of the GNU General Public License along
*	with this program; if not, write to the Free Software Foundation, Inc.,
*	51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/fire833/morfic/pkg/client/informers/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Certificates returns a CertificateInformer.
	Certificates() CertificateInformer
	// CertificateLists returns a CertificateListInformer.
	CertificateLists() CertificateListInformer
	// CertificateSigners returns a CertificateSignerInformer.
	CertificateSigners() CertificateSignerInformer
	// CertificateSignerLists returns a CertificateSignerListInformer.
	CertificateSignerLists() CertificateSignerListInformer
	// CertificateSigningRequests returns a CertificateSigningRequestInformer.
	CertificateSigningRequests() CertificateSigningRequestInformer
	// CertificateSigningRequestLists returns a CertificateSigningRequestListInformer.
	CertificateSigningRequestLists() CertificateSigningRequestListInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Certificates returns a CertificateInformer.
func (v *version) Certificates() CertificateInformer {
	return &certificateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// CertificateLists returns a CertificateListInformer.
func (v *version) CertificateLists() CertificateListInformer {
	return &certificateListInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// CertificateSigners returns a CertificateSignerInformer.
func (v *version) CertificateSigners() CertificateSignerInformer {
	return &certificateSignerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// CertificateSignerLists returns a CertificateSignerListInformer.
func (v *version) CertificateSignerLists() CertificateSignerListInformer {
	return &certificateSignerListInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// CertificateSigningRequests returns a CertificateSigningRequestInformer.
func (v *version) CertificateSigningRequests() CertificateSigningRequestInformer {
	return &certificateSigningRequestInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// CertificateSigningRequestLists returns a CertificateSigningRequestListInformer.
func (v *version) CertificateSigningRequestLists() CertificateSigningRequestListInformer {
	return &certificateSigningRequestListInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
